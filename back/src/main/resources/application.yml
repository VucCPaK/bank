server:
  port: 8081
  address: localhost

microservice:
  kafka:
    projection-group-id: projection-group
    group-id: es_microservice
    default-concurrency: 10
    topics:
      card-event-store: card-event-store

spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: microservice

  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: create-drop

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/bank
    username: postgres
    password: postgres

  data:
    mongodb:
      uri: mongodb://localhost:27017/bank
      username: mongo
      password: mongo

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: spring
            authorization-grant-type: authorization_code
            provider: keycloak
            scope:
              - openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/bank
            user-name-attribute: preferred_username

      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/bank

  application:
    name: back_java_cqrs_and_event-sourcing

  zipkin:
    base-url: http://localhost:8081